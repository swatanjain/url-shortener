package org.urlshortener.controller;

import static org.urlshortener.ApplicationConstants.SHORT_URL_ID;

import java.io.IOException;
import java.util.Optional;

import javax.servlet.http.HttpServletResponse;

import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import org.urlshortener.Logger;
import org.urlshortener.model.RegisteredUrl;

/**
 * Supports redirection of short URLs generated by {@link UrlRegistrationController}
 * @since 1.0
 **/
@RestController
@RequestMapping("/")
public class RedirectController extends BaseController {

	/**
	 * Redirects the client/browser to the registered full-length URL 
	 * 	with the configured HTTP status for redirection that could either be 301 or 302
	 **/
	@RequestMapping(method=RequestMethod.GET, value="/{" + SHORT_URL_ID + "}")
	public void redirect(@PathVariable(SHORT_URL_ID) String id, HttpServletResponse httpResponse) throws IOException {
		
		Logger.debug("Redirect requested for shortUrl with id: "+ id);
		Optional<RegisteredUrl> registeredUrl = urlRepo.read(id);

		if( registeredUrl.isPresent() ) {

			RegisteredUrl url = registeredUrl.get();
			httpResponse.setStatus(url.getRedirectType());
			httpResponse.setHeader(HttpHeaders.LOCATION, url.getUrl());

		} else {
			httpResponse.sendError(HttpStatus.NOT_FOUND.value(), "Redirect rejected as given url is not registered");
		}

	}


}
